# Copyright 2017-present i2CAT
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


responses: &API_RESPONSES
  200: &HTTP_200_OK
    description: Request succeeded.
  202: &HTTP_202_ACCEPTED
    description: Request accepted. Request is under processing.
  400: &HTTP_400_BAD_REQUEST
    description: BAd request. Request cannot be processed.
  404: &HTTP_404_NOT_FOUND
    description: Not found. Method does not exist in this API.
  415: &HTTP_415_UNSUPPORTED_MEDIA_TYPE
    description: Wrong media type. Server refuses to service because the payload is wrongly formatted.
  418: &HTTP_418_I_AM_TEAPOT
    description: Request not accepted. Improper usage of the resource.
  500: &HTTP_500_INTERNAL_SERVER_ERROR
    description: Internal error. Server is prevented from fulfilling the request.
  501: &HTTP_501_NOT_IMPLEMENTED
    description: Not implemented. Method does not currently provide any logic.

swagger: "2.0"

info:
  description: This API provides interaction between the SHIELD platform and OSM and the SHIELD components. Usage examples; manage and configure vNSFs or check available VIMs.
  version: 0.1.0
  title: vNSFO API
  termsOfService: ""
  contact:
    email: carolina.fernandez@i2cat.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

basePath: /

tags:
  - name: common
    description: Common operations
  - name: nfvi
    description: Infrastructure data
    externalDocs:
      description: D3.1
      url: https://www.shield-h2020.eu/documents/project-deliverables/SHIELD_D3.1_Specifications,_Design_and_Architecture_for_the_vNSF_Ecosystem_v1.0.pdf
  - name: ns
    description: NS operations
    externalDocs:
      description: OSMr2 API
      url: https://osm.etsi.org/wikipub/images/2/24/Osm-r1-so-rest-api-guide.pdf
  - name: package
    description: Package operations
    externalDocs:
      description: ""
      url: n/a
  - name: vim
    description: VIM operations
    externalDocs:
      description: OSMr2 API
      url: https://osm.etsi.org/wikipub/images/2/24/Osm-r1-so-rest-api-guide.pdf
  - name: vnsf
    description: vNSF operations
    externalDocs:
      description: OSMr2 API
      url: https://osm.etsi.org/wikipub/images/2/24/Osm-r1-so-rest-api-guide.pdf

schemes:
  - https

paths:
  /:
    get:
      tags:
        - common
      summary: Lists all API methods
      description: >-
        All available REST methods are provided through this method.
      operationId: getEntryPoints
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/EndPoints"
        <<: *API_RESPONSES

  /nfvi/network/config/flows:
    get:
      tags:
        - nfvi
      summary: Provides information on flows in DB
      description: >-
        Get data from a given flow (or all flows) in the default switch and table.
        This is retrieved from the internal database, not from the controller
      operationId: getNetworkConfigFlows
      produces:
        - application/json
      responses:
        200:
          description: Flow information
          schema:
            $ref: "#/definitions/GetNetworkFlowOutput"
        500:
          description: Error when retrieving data from DB
    delete:
      tags:
        - nfvi
      summary: Delete all flows from the internal DB
      description: >-
        Delete all flows.
        These are deleted from the internal database, not from the controller
      operationId: deleteNetworkConfigFlows
      responses: *API_RESPONSES

  /nfvi/network/config/flows/{flow_id}:
    get:
      tags:
        - nfvi
      summary: Provides information on flow in DB
      description: >-
        Get data from a given flow in the default switch and table.
        This is retrieved from the internal database, not from the controller
      operationId: getNetworkConfigFlow
      produces:
        - application/json
      parameters:
        - name: flow_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Flow information
          schema:
            $ref: "#/definitions/GetNetworkFlowOutput"
        500:
          description: Error when retrieving data from DB
    delete:
      tags:
        - nfvi
      summary: Delete specific flow from the internal DB
      description: >-
        Delete a specific flow.
        This is deleted from the internal database, not from the controller
      operationId: deleteNetworkConfigFlow
      parameters:
        - name: flow_id
          in: path
          required: true
          type: string
      responses: *API_RESPONSES

  /nfvi/network/reference/flows:
    get:
      tags:
        - nfvi
      summary: Provides information on flows in DB
      description: >-
        Get current JSON flows from the internal configuration, which acts as
        a reference to validate against the operational status of the controller.
        This is retrieved from the internal database, not from the controller
      operationId: getNetworkConfigReferenceFlows
      produces:
        - application/json
      responses:
        200:
          description: Flow information
          schema:
            $ref: "#/definitions/GetNetworkFlowOutputReference"
        500:
          description: Error when opening file

  /nfvi/network/running/flows:
    get:
      tags:
        - nfvi
      summary: Provides information on flows in the controller
      description: >-
        Get data from a given flow (or all flows) in the default switch and table.
        This is retrieved from the internal database, not from the controller
      operationId: getNetworkRunningFlows
      produces:
        - application/json
      responses:
        200:
          description: Flow information
          schema:
            $ref: "#/definitions/GetNetworkFlowOutput"
        500:
          description: Error when retrieving data from the controller
    post:
      tags:
        - nfvi
      summary: Push flows to the controller
      description: >-
        Submit SDN flows to the default switch and table
      operationId: postNetworkRunningFlows
      parameters:
        - in: body
          name: body
          description: The body of the request
          required: true
          schema:
            $ref: "#/definitions/PostNetworkRunningFlow"
      responses:
        200:
          description: Flow information
          schema:
            $ref: "#/definitions/GetNetworkFlowOutput"
        500:
          description: Error when pushing data to the controller
    delete:
      tags:
        - nfvi
      summary: Delete flows from the controller
      description: >-
        Delete all flows from the default switch and table
      operationId: deleteNetworkRunningFlows
      responses: *API_RESPONSES

  /nfvi/network/running/flows/{flow_id}:
    get:
      tags:
        - nfvi
      summary: Provides information on flow in controller
      description: >-
        Get data from a given flow (or all flows) in the default switch and table.
        This is retrieved from the controller, not from the internal database
      operationId: getNetworkRunningFlow
      produces:
        - application/json
      parameters:
        - name: flow_id
          in: path
          required: true
          type: string
          description: ID of the flow in the controller
      responses:
        200:
          description: Flow information
          schema:
            $ref: "#/definitions/GetNetworkFlowOutput"
        500:
          description: Error when retrieving data from the controller
    post:
      tags:
        - nfvi
      summary: Push flow to the controller
      description: >-
        Submit SDN flow to the default switch and table
      operationId: postNetworkRunningFlow
      parameters:
        - name: flow_id
          in: path
          required: true
          type: string
          description: ID of the flow in the controller
        - in: body
          name: body
          description: The flow, as requested by a normal call to the controller
          required: true
          schema:
            $ref: "#/definitions/PostNetworkRunningFlow"
      responses:
        200:
          description: Flow information
          schema:
            $ref: "#/definitions/GetNetworkFlowOutput"
        500:
          description: Error when pushing data to the controller
    delete:
      tags:
        - nfvi
      summary: Delete flows from the controller
      description: >-
        Delete all flows from the default switch and table
      parameters:
        - name: flow_id
          in: path
          required: true
          type: string
          description: ID of the flow in the controller
      operationId: deleteNetworkRunningFlow
      responses: *API_RESPONSES

  /nfvi/node/{node_id}:
    get:
      tags:
        - nfvi
      summary: Get node information
      description: >-
        Get node information and isolation status
      operationId: getNode
      produces:
        - application/json
      parameters:
        - name: node_id
          in: path
          required: true
          type: string
          description: ID of the node in the infrastructure
      responses:
        200:
          description: Node information
          schema:
            $ref: "#/definitions/GetNodeIdOutput"
        <<: *API_RESPONSES
    delete:
      tags:
        - nfvi
      summary: Removes node from vNSFO
      description: >-
        Removes the node from the vNSFO
      operationId: removeNode
      produces:
        - application/json
      parameters:
        - name: node_id
          in: path
          required: true
          type: string
          description: ID of the node in the infrastructure
      responses:
        204:
          description: Request accepted
        <<: *API_RESPONSES
    put:
      tags:
        - nfvi
      summary: Isolates/Terminates a node
      description: >-
        Isolates or terminates a compromised node according to isolation policy
      operationId: isolateNode
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: node_id
          in: path
          required: true
          type: string
        - in: body
          name: body
          description: Body with information of the node and the operation
          required: true
          application/json:
            schema:
              oneOf:
                - $ref: "#/definitions/IsolateNodeInput"
                - $ref: "#/definitions/DisableNodeInput"
                - $ref: "#/definitions/TerminateNodeInput"
      responses:
        204:
          description: Request accepted
        <<: *API_RESPONSES

  /nfvi/node/{node_id}/isolate:
    post:
      tags:
        - nfvi
      summary: Isolates a node
      description: >-
        Isolates a compromised node according to isolation policy
      operationId: isolateNodeEndpoint
      parameters:
        - name: node_id
          in: path
          required: true
          type: string
      responses: *API_RESPONSES

  /nfvi/node/{node_id}/terminate:
    post:
      tags:
        - nfvi
      summary: Terminates a node
      description: >-
        Terminates a compromised node according to termination policy
      operationId: terminateNodeEndpoint
      parameters:
        - name: node_id
          in: path
          required: true
          type: string
      responses: *API_RESPONSES

  /nfvi/node:
    get:
      tags:
        - nfvi
      summary: Get information for all nodes
      description: >-
        Get information and isolation status for all nodes
      operationId: getNodeAll
      produces:
        - application/json
      responses:
        200:
          description: All nodes information
          schema:
            $ref: "#/definitions/GetNodeOutput"
        <<: *API_RESPONSES
    post:
      tags:
        - nfvi
      summary: Registers a new node into the NFVO
      description: >-
        Registers a new node into the NFVO including authentication schema and isolation policy
      operationId: registerNode
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: The body of the request
          required: true
          schema:
            $ref: "#/definitions/RegisterNodeInput"
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/RegisterNodeOutput"
        <<: *API_RESPONSES

  /nfvi/node/physical:
    get:
      tags:
        - nfvi
      summary: Get information on physical nodes
      description: >-
        Get information and isolation status for the physical nodes
      operationId: getNodePhysical
      produces:
        - application/json
      responses:
        200:
          description: Physical node information
          schema:
            $ref: "#/definitions/GetNodeOutput"
        <<: *API_RESPONSES

  /nfvi/node/physical/isolated:
    get:
      tags:
        - nfvi
      summary: Get information on isolated physical nodes
      description: >-
        Get information for the isolated physical nodes
      operationId: getNodePhysicalIsolated
      produces:
        - application/json
      responses:
        200:
          description: Physical isolated node information
          schema:
            $ref: "#/definitions/GetNodeOutput"
        <<: *API_RESPONSES

  /nfvi/node/physical/trusted:
    get:
      tags:
        - nfvi
      summary: Get information on trusted physical nodes
      description: >-
        Get information for the trusted physical nodes
      operationId: getNodePhysicalTrusted
      produces:
        - application/json
      responses:
        200:
          description: Physical trusted node information
          schema:
            $ref: "#/definitions/GetNodeOutput"
        <<: *API_RESPONSES

  /nfvi/node/virtual:
    get:
      tags:
        - nfvi
      summary: Get information on virtual nodes
      description: >-
        Get information and isolation status for the virtual nodes
      operationId: getNodeVirtual
      produces:
        - application/json
      responses:
        200:
          description: Virtual node information
          schema:
            $ref: "#/definitions/GetNodeOutput"
        <<: *API_RESPONSES

  /nfvi/node/virtual/isolated:
    get:
      tags:
        - nfvi
      summary: Get information on isolated virtual nodes
      description: >-
        Get information for the isolated virtual nodes
      operationId: getNodeVirtualIsolated
      produces:
        - application/json
      responses:
        200:
          description: Virtual isolated node information
          schema:
            $ref: "#/definitions/GetNodeOutput"
        <<: *API_RESPONSES

  /nfvi/node/virtual/trusted:
    get:
      tags:
        - nfvi
      summary: Get information on trusted virtual nodes
      description: >-
        Get information for the trusted virtual nodes
      operationId: getNodeVirtualTrusted
      produces:
        - application/json
      responses:
        200:
          description: Virtual trusted node information
          schema:
            $ref: "#/definitions/GetNodeOutput"
        <<: *API_RESPONSES

  /ns/config:
    get:
      tags:
        - ns
      summary: Provides available NSs
      description: >-
        Returns the available NSs.
      operationId: getAvailableNss
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/ConfigNssOutput"
        <<: *API_RESPONSES

  /ns/r2/config:
    get:
      tags:
        - ns
      summary: Provides available NSs
      description: >-
        Returns the available NSs.
      operationId: getAvailableNssRelease2
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/ConfigNssOutput"
        <<: *API_RESPONSES

  /ns/r4/config:
    get:
      tags:
        - ns
      summary: Provides available NSs (OSM R4)
      description: >-
        Returns the available NSs.
      operationId: getAvailableNssRelease4
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/ConfigNssOutput"
        <<: *API_RESPONSES

  /ns/instantiate:
    post:
      tags:
        - ns
      summary: Instantiates a NS
      consumes:
        - application/json
      parameters:
      - in: body
        name: body
        description: The body of the request
        required: true
        schema:
          allOf:
            - $ref: "#/definitions/InstantiateNSExplicitInput"
            - $ref: "#/definitions/InstantiateNSImplicitInput"
      description: >-
        Instantiates a NS
      operationId: instantiateNS
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/InstantiateNSOutput"
        <<: *API_RESPONSES

  /ns/r2/instantiate:
    post:
      tags:
        - ns
      summary: Instantiates a NS
      consumes:
        - application/json
      parameters:
      - in: body
        name: body
        description: The body of the request
        required: true
        schema:
          allOf:
            - $ref: "#/definitions/InstantiateNSExplicitInput"
            - $ref: "#/definitions/InstantiateNSImplicitInput"
      description: >-
        Instantiates a NS
      operationId: instantiateNSRelease2
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/InstantiateNSOutput"
        <<: *API_RESPONSES

  /ns/r4/instantiate:
    post:
      tags:
        - ns
      summary: Instantiates a NS
      consumes:
        - application/json
      parameters:
      - in: body
        name: body
        description: The body of the request
        required: true
        schema:
          allOf:
            - $ref: "#/definitions/InstantiateNSExplicitInput"
            - $ref: "#/definitions/InstantiateNSImplicitInput"
      description: >-
        Instantiates a NS
      operationId: instantiateNSRelease4
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/InstantiateNSOutput"
        <<: *API_RESPONSES

  /ns/running:
    get:
      tags:
        - ns
      summary: Provides running NSs
      description: >-
        Returns the instantiated NS.
      operationId: getDeployedNss
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/RunningNsOutput"
        <<: *API_RESPONSES

  /ns/running/{instance_id}:
    get:
      parameters:
        - in: path
          name: instance_id
          required: true
          type: string
          description: ID or name of the Network Service
      tags:
        - ns
      summary: Provides specific running NSs
      description: >-
        Returns the specific instantiated NS.
      operationId: getDeployedNssPerId
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/RunningNsOutput"
        <<: *API_RESPONSES
    delete:
      parameters:
        - in: path
          name: instance_id
          required: true
          type: string
          description: ID or name of the Network Service
      tags:
        - ns
      summary: Deletes running NSs
      description: >-
        Deletes the specific instantiated NS.
      operationId: deleteDeployedNssPerId
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/DeleteNsOutput"
        <<: *API_RESPONSES

  /ns/r2/running:
    get:
      tags:
        - ns
      summary: Provides specific running NSs
      description: >-
        Returns the specific instantiated NS.
      operationId: getDeployedNssRelease2
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/RunningNsOutput"
        <<: *API_RESPONSES

  /ns/r2/running/{instance_id}:
    get:
      parameters:
        - in: path
          name: instance_id
          required: true
          type: string
          description: ID or name of the Network Service
      tags:
        - ns
      summary: Provides specific running NSs
      description: >-
        Returns the specific instantiated NS.
      operationId: getDeployedNssPerIdRelease2
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/RunningNsOutput"
        <<: *API_RESPONSES
    delete:
      parameters:
        - in: path
          name: instance_id
          required: true
          type: string
          description: ID or name of the Network Service
      tags:
        - ns
      summary: Deletes running NSs
      description: >-
        Deletes the specific instantiated NS.
      operationId: deleteDeployedNssPerIdRelease2
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/DeleteNsOutput"
        <<: *API_RESPONSES

  /ns/r4/running:
    get:
      tags:
        - ns
      summary: Provides running NSs
      description: >-
        Returns the instantiated NS.
      operationId: getDeployedNssRelease4
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/RunningNsOutput"
        <<: *API_RESPONSES

  /ns/r4/running/{instance_id}:
    get:
      parameters:
        - in: path
          name: instance_id
          required: true
          type: string
          description: ID or name of the Network Service
      tags:
        - ns
      summary: Provides specific running NSs
      description: >-
        Returns the specific instantiated NS.
      operationId: getDeployedNssPerIdRelease4
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/RunningNsOutput"
        <<: *API_RESPONSES
    delete:
      parameters:
        - in: path
          name: instance_id
          required: true
          type: string
          description: ID or name of the Network Service
      tags:
        - ns
      summary: Deletes running NSs
      description: >-
        Deletes the specific instantiated NS.
      operationId: deleteDeployedNssPerIdRelease4
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/DeleteNsOutput"
        <<: *API_RESPONSES

  /package/onboard:
    post:
      tags:
        - package
      summary: Onboards a local package into NFVO
      description: >-
        Uploads a locally stored package for a NS or vNSF into the NFVO.
      operationId: onboardLocalPackage
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
      - name: package
        in: formData
        required: true
        type: string
        description: path to the package, as in a cURL call
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/PackageOnboardedOutput"
        <<: *API_RESPONSES

  /package/r2/onboard:
    post:
      tags:
        - package
      summary: Onboards a local package into NFVO
      description: >-
        Uploads a locally stored package for a NS or vNSF into the NFVO.
      operationId: onboardLocalPackageRelease2
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
      - name: package
        in: formData
        required: true
        type: string
        description: path to the package, as in a cURL call
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/PackageOnboardedOutput"
        <<: *API_RESPONSES

  /package/r4/onboard:
    post:
      tags:
        - package
      summary: Onboards a local package into NFVO
      description: >-
        Uploads a locally stored package for a NS or vNSF into the NFVO.
      operationId: onboardLocalPackageRelease4
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
      - name: package
        in: formData
        required: true
        type: string
        description: path to the package, as in a cURL call
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/PackageOnboardedOutput"
        <<: *API_RESPONSES

  /package/onboard/remote:
    post:
      tags:
        - package
      summary: Onboards a remotely stored package into NFVO
      description: >-
        Uploads a remotely stored package for a NS or vNSF into the NFVO.
      operationId: onboardRemotePackage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        description: Body with the absolute path to the remote resource
        required: true
        schema:
          $ref: "#/definitions/PackageOnboardedInput"
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/PackageOnboardedOutput"
        <<: *API_RESPONSES

  /package/r2/onboard/remote:
    post:
      tags:
        - package
      summary: Onboards a remotely stored package into NFVO
      description: >-
        Uploads a remotely stored package for a NS or vNSF into the NFVO.
      operationId: onboardRemotePackageRelease2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        description: Body with the absolute path to the remote resource
        required: true
        schema:
          $ref: "#/definitions/PackageOnboardedInput"
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/PackageOnboardedOutput"
        <<: *API_RESPONSES

  /package/r4/onboard/remote:
    post:
      tags:
        - package
      summary: Onboards a remotely stored package into NFVO
      description: >-
        Uploads a remotely stored package for a NS or vNSF into the NFVO.
      operationId: onboardRemotePackageRelease4
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        description: Body with the absolute path to the remote resource
        required: true
        schema:
          $ref: "#/definitions/PackageOnboardedInput"
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/PackageOnboardedOutput"
        <<: *API_RESPONSES

  /package/{vnsf_name}:
    delete:
      tags:
        - package
      summary: Removes package from vNSFO
      description: >-
        Removes the package of a NS or vNSF from the vNSFO.
      operationId: removePackage
      produces:
        - application/json
      parameters:
        - name: vnsf_name
          in: path
          required: true
          type: string
          description: Name of the VNF package in the orchestrator
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/PackageRemovedOutput"
        <<: *API_RESPONSES

  /package/r2/{vnsf_name}:
    delete:
      tags:
        - package
      summary: Removes package from vNSFO
      description: >-
        Removes the package of a NS or vNSF from the vNSFO.
      operationId: removePackageRelease2
      produces:
        - application/json
      parameters:
        - name: vnsf_name
          in: path
          required: true
          type: string
          description: Name of the VNF package in the orchestrator
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/PackageRemovedOutput"
        <<: *API_RESPONSES

  /package/r4/{vnsf_name}:
    delete:
      tags:
        - package
      summary: Removes package from vNSFO
      description: >-
        Removes the package of a NS or vNSF from the vNSFO.
      operationId: removePackageRelease4
      produces:
        - application/json
      parameters:
        - name: vnsf_name
          in: path
          required: true
          type: string
          description: Name of the VNF package in the orchestrator
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/PackageRemovedOutput"
        <<: *API_RESPONSES

  /vim:
    get:
      tags:
        - vim
      summary: Provides available VIMs
      description: >-
        Returns the available VIMs.
      operationId: getRegisteredVims
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/VimListOutput"
        <<: *API_RESPONSES

  /vim/image:
    get:
      tags:
        - vim
      summary: Provides the list of available VDUs
      description: >-
        Returns the list of available VDUs.
      operationId: getAvailableVimImages
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/VimListImageOutput"
        <<: *API_RESPONSES

  /vim/image/{vim_id}:
    post:
      tags:
        - vim
      summary: Registers local VDU image into specific VIM
      description: >-
        Uploads a locally stored image of a vNSF into a specific VIM.
      operationId: registerVnsfImage
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
      - name: vim_id
        in: path
        required: true
        type: string
        description: UUID of the VIM in the orchestrator
      - name: image
        in: formData
        required: true
        type: string
        description: UUID of the image in the VIM
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/VimRegisterImageOutput"
        <<: *API_RESPONSES

  /vnsf/config:
    get:
      tags:
        - vnsf
      summary: Provides available vNSFs
      description: >-
        Returns the available vNSFs.
      operationId: getAvailableVnsfs
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/ConfigVnsfOutput"
        <<: *API_RESPONSES

  /vnsf/r2/config:
    get:
      tags:
        - vnsf
      summary: Provides available vNSFs
      description: >-
        Returns the available vNSFs.
      operationId: getAvailableVnsfsRelease2
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/ConfigVnsfOutput"
        <<: *API_RESPONSES

  /vnsf/r4/config:
    get:
      tags:
        - vnsf
      summary: Provides available vNSFs
      description: >-
        Returns the available vNSFs.
      operationId: getAvailableVnsfsRelease4
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/ConfigVnsfOutput"
        <<: *API_RESPONSES

  /vnsf/running:
    get:
      tags:
        - vnsf
      summary: Provides running vNSFs
      description: >-
        Returns the instantiated vNSFs.
      operationId: getDeployedVnsfs
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/RunningVnsfOutput"
        <<: *API_RESPONSES

  /vnsf/r2/running:
    get:
      tags:
        - vnsf
      summary: Provides running vNSFs
      description: >-
        Returns the instantiated vNSFs.
      operationId: getDeployedVnsfsRelease2
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/RunningVnsfOutput"
        <<: *API_RESPONSES

  /vnsf/r4/running:
    get:
      tags:
        - vnsf
      summary: Provides running vNSFs
      description: >-
        Returns the instantiated vNSFs.
      operationId: getDeployedVnsfsRelease4
      produces:
        - application/json
      responses:
        200:
          description: Request succeeded
          schema:
            $ref: "#/definitions/RunningVnsfOutput"
        <<: *API_RESPONSES

  /vnsf/running/{instance_id}:
    get:
      tags:
        - vnsf
      summary: Provides specific running vNSF
      description: >-
        Returns the specific instantiated vNSF.
      operationId: getDeployedVnsfsPerId
      produces:
        - application/json
      parameters:
        - in: path
          name: instance_id
          required: true
          type: string
          description: ID or name of the vNSF
      responses: *API_RESPONSES

  /vnsf/r2/running/{instance_id}:
    get:
      tags:
        - vnsf
      summary: Provides specific running vNSF
      description: >-
        Returns the specific instantiated vNSF.
      operationId: getDeployedVnsfsPerIdRelease2
      produces:
        - application/json
      parameters:
        - in: path
          name: instance_id
          required: true
          type: string
          description: ID or name of the vNSF
      responses: *API_RESPONSES

  /vnsf/r4/running/{instance_id}:
    get:
      tags:
        - vnsf
      summary: Provides specific running vNSF
      description: >-
        Returns the specific instantiated vNSF.
      operationId: getDeployedVnsfsPerIdRelease4
      produces:
        - application/json
      parameters:
        - in: path
          name: instance_id
          required: true
          type: string
          description: ID or name of the vNSF
      responses: *API_RESPONSES

  /vnsf/action:
    post:
      tags:
        - vnsf
      summary: Executes pre-defined action to a specific vNSF
      description: >-
        Triggers the remote execution of data into a specific vNSF.
      operationId: executeVnsfAction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        description: The contents of the body with the action and value, among others
        required: true
        schema:
          $ref: "#/definitions/VnsfActionInput"
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/VnsfActionOutput"
        <<: *API_RESPONSES

  /vnsf/r2/action:
    post:
      tags:
        - vnsf
      summary: Executes pre-defined action from a specific vNSF
      description: >-
        Triggers the remote execution of data into a specific vNSF.
      operationId: executeVnsfActionRelease2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        description: The contents of the body with the action and value, among others
        required: true
        schema:
          $ref: "#/definitions/VnsfActionInput"
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/VnsfActionOutput"
        <<: *API_RESPONSES

  /vnsf/r4/action:
    post:
      tags:
        - vnsf
      summary: Executes pre-defined action from a specific vNSF
      description: >-
        Triggers the remote execution of data into a specific vNSF.
      operationId: executeVnsfActionRelease4
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        description: The contents of the body with the action and value, among others
        required: true
        schema:
          $ref: "#/definitions/VnsfActionInput"
      responses:
        202:
          description: Request accepted
          schema:
            $ref: "#/definitions/VnsfActionOutput"
        <<: *API_RESPONSES


definitions:

  InstantiateNSImplicitInput:
    type: object
    required:
      - attack_type
    properties:
      attack_type:
        type: string
        example: slowloris
      vim_id:
        type: string
        example: f9acd550-9d48-11e7-ae4c-00163e3afbe5
      virt_type:
        type: string
        example: docker
      vim_net:
        type: string
        example: provider
      action:
        type: string
        example: set-policies
      params:
        type: object
        required:
          - policies
        properties:
          policies:
            type: string
            example: test-policy
      target_status:
        type: string
        example: active
      pcr0:
        type: string
        example: example
      driver:
        type: string
        example: OAT
      analysis_type:
        type: string
        example: FULL
      distribution:
        type: string
        example: xenial
      authentication:
        type: object
        required:
          - username
          - type
        properties:
          username:
            type: string
            example: user
          type:
            type: string
            example: password, private_key
          password:
            type: string
            example: password
          private_key:
            type: string
            example: -----BEGIN RSA PRIVATE KEY-----\nMIIEqAIBAAKCAQEAnaSdeeE/bcAxgsivLliDhRE017ZK74m2QYg58QNbfdzoNba2 ...
      isolation_policy:
        type: object
        required:
          - name
          - type
        properties:
          name:
            type: string
            example: DownEth0
          type:
            type: string
            example: ifdown, delflow, shutdown
          interface_name:
            type: string
            example: eth0
          command:
            type: string
            example: sudo poweroff
          flow_id:
            type: string
            example: 21
          rule:
            type: string
            example: rule1
      termination_policy:
        type: object
        required:
          - name
          - type
        properties:
          name:
            type: string
            example: DownEth0
          type:
            type: string
            example: ifdown, delflow, shutdown
          interface_name:
            type: string
            example: eth0
          command:
            type: string
            example: sudo poweroff
          flow_id:
            type: string
            example: 21
          rule:
            type: string
            example: rule1

  InstantiateNSExplicitInput:
    type: object
    required:
      - ns_name
      - instance_name
    properties:
      ns_name:
        type: string
        example: l23filter_nsd
      instance_name:
        type: string
        example: my service instance
      vim_id:
        type: string
        example: f9acd550-9d48-11e7-ae4c-00163e3afbe5
      virt_type:
        type: string
        example: docker
      vim_net:
        type: string
        example: provider
      action:
        type: string
        example: set-policies
      params:
        type: object
        required:
          - policies
        properties:
          policies:
            type: string
            example: test-policy
      target_status:
        type: string
        example: active
      pcr0:
        type: string
        example: example
      driver:
        type: string
        example: OAT
      analysis_type:
        type: string
        example: FULL
      distribution:
        type: string
        example: xenial
      authentication:
        type: object
        required:
          - username
          - type
        properties:
          username:
            type: string
            example: user
          type:
            type: string
            example: password, private_key
          password:
            type: string
            example: password
          private_key:
            type: string
            example: -----BEGIN RSA PRIVATE KEY-----\nMIIEqAIBAAKCAQEAnaSdeeE/bcAxgsivLliDhRE017ZK74m2QYg58QNbfdzoNba2 ...
      isolation_policy:
        type: object
        required:
          - name
          - type
        properties:
          name:
            type: string
            example: DownEth0
          type:
            type: string
            example: ifdown, delflow, shutdown
          interface_name:
            type: string
            example: eth0
          command:
            type: string
            example: sudo poweroff
          flow_id:
            type: string
            example: 21
          rule:
            type: string
            example: rule1
      termination_policy:
        type: object
        required:
          - name
          - type
        properties:
          name:
            type: string
            example: DownEth0
          type:
            type: string
            example: ifdown, delflow, shutdown
          interface_name:
            type: string
            example: eth0
          command:
            type: string
            example: sudo poweroff
          flow_id:
            type: string
            example: 21
          rule:
            type: string
            example: rule1

  PostNetworkRunningFlow:
    type: string
    example: <flow xmlns="urn:opendaylight:flow:inventory"><id>L2switch-0</id><hard-timeout>0</hard-timeout><idle-timeout>0</idle-timeout><cookie>3098476543630901248</cookie><instructions><instruction><order>0</order><apply-actions><action><order>0</order><output-action><max-length>65535</max-length><output-node-connector>NORMAL</output-node-connector></output-action></action></apply-actions></instruction></instructions><priority>100</priority><flow-statistics xmlns="urn:opendaylight:flow:statistics"><packet-count>0</packet-count><byte-count>0</byte-count><duration><nanosecond>42000000</nanosecond><second>2064</second></duration></flow-statistics><table_id>0</table_id></flow>

  ConfigNssOutput:
    type: object
    required:
      - ns
    properties:
      ns:
        type: array
        items:
          type: object
          required:
            - constituent_vnfs
            - description
            - ns_name
            - vendor
            - version
          properties:
            constituent_vnfs:
              type: array
              items:
                type: object
                required:
                  - member-vnf-index
                  - start-by-default
                  - vnfd-id-ref
                properties:
                  member-vnf-index:
                    type: string
                    example: 1
                  start-by-default:
                    type: string
                    example: true
                  vnfd-id-ref:
                    type: string
                    example: cirros_vnfd_v1_2
            description:
              type: string
              example: Generated by OSM package generator
            ns_name:
              type: string
              example: cirros_2vnf_nsd
            vendor:
              type: string
              example: OSM
            version:
              type: string
              example: 1.0

  ConfigVnsfOutput:
    type: object
    required:
      - vnsf
    properties:
      vnsf:
        type: array
        items:
          type: object
          required:
            - charm
            - description
            - ns_name
            - vendor
            - version
          properties:
            charm:
              type: string
              example: cirros_charm
            description:
              type: string
              example: Generated by OSM package generator
            ns_name:
              type: string
              example: cirros_2vnf_nsd
            vendor:
              type: string
              example: OSM
            version:
              type: string
              example: 1.0

  EndPoints:
    type: object
    required:
      - endpoints
    properties:
      endpoints:
        type: array
        items:
          type: object
          properties:
            endpoint:
              type: string
              example: /
            methods:
              type: array
              items:
                type: string
                example: GET

  GetNetworkFlowOutput:
    type: object
    required:
      - flow_id
      - flow
      - result
      - details
    properties:
      flow_id:
        type: string
        example: L2switch-0
      flow:
        type: string
        example: <flow xmlns="urn:opendaylight:flow:inventory"><id>L2switch-0</id><hard-timeout>0</hard-timeout><idle-timeout>0</idle-timeout><cookie>3098476543630901248</cookie><instructions><instruction><order>0</order><apply-actions><action><order>0</order><output-action><max-length>65535</max-length><output-node-connector>NORMAL</output-node-connector></output-action></action></apply-actions></instruction></instructions><priority>100</priority><flow-statistics xmlns="urn:opendaylight:flow:statistics"><packet-count>0</packet-count><byte-count>0</byte-count><duration><nanosecond>42000000</nanosecond><second>2064</second></duration></flow-statistics><table_id>0</table_id></flow>
      result:
        type: string
        example: installed
      details:
        type: string
        example: ""

  GetNetworkFlowOutputReference:
    type: string
    example: {
     "flow-node-inventory:table" : [
        {
           "id" : 0,
           "opendaylight-flow-table-statistics:flow-table-statistics" : {
              "packets-looked-up" : 32357,
              "active-flows" : 3,
              "packets-matched" : 0
           },
           "flow" : [
              {
                 "instructions" : {
                    "instruction" : [
                       {
                          "apply-actions" : {
                             "action" : [
                                {
                                   "output-action" : {
                                      "output-node-connector" : "NORMAL",
                                      "max-length" : 65535
                                   },
                                   "order" : 0
                                }
                             ]
                          },
                          "order" : 0
                       }
                    ]
                 },
                 "opendaylight-flow-statistics:flow-statistics" : {
                    "duration" : {
                       "nanosecond" : 771000000,
                       "second" : 5
                    },
                    "byte-count" : 0,
                    "packet-count" : 558
                 },
                 "id" : "L2switch-0",
                 "idle-timeout" : 0,
                 "table_id" : 0,
                 "cookie" : 3098476543630901248,
                 "match" : {},
                 "hard-timeout" : 0,
                 "priority" : 101
              },
              {
                 "opendaylight-flow-statistics:flow-statistics" : {
                    "packet-count" : 48710,
                    "byte-count" : 0,
                    "duration" : {
                       "second" : 2121054,
                       "nanosecond" : 929000000
                    }
                 },
                 "id" : "#UF$TABLE*0-1",
                 "idle-timeout" : 0,
                 "table_id" : 0,
                 "cookie" : 3098476543630901248,
                 "match" : {},
                 "hard-timeout" : 0,
                 "priority" : 0
              },
              {
                 "priority" : 100,
                 "hard-timeout" : 0,
                 "match" : {
                    "ethernet-match" : {
                       "ethernet-type" : {
                          "type" : 35020
                       }
                    }
                 },
                 "cookie" : 3098476543630901248,
                 "table_id" : 0,
                 "idle-timeout" : 0,
                 "id" : "#UF$TABLE*0-2",
                 "opendaylight-flow-statistics:flow-statistics" : {
                    "packet-count" : 0,
                    "byte-count" : 0,
                    "duration" : {
                       "nanosecond" : 877000000,
                       "second" : 2121054
                    }
                 },
                 "instructions" : {
                    "instruction" : [
                       {
                          "order" : 0,
                          "apply-actions" : {
                             "action" : [
                                {
                                   "order" : 0,
                                   "output-action" : {
                                      "max-length" : 65535,
                                      "output-node-connector" : "CONTROLLER"
                                   }
                                }
                             ]
                          }
                       }
                    ]
                 }
              }
           ]
        }
     ]
  }

  GetNodeIdOutput:
    type: object
    required:
      - node_id
      - host_name
      - ip_address
      - pcr0
      - driver
      - distribution
      - analysis_type
      - status
    properties:
      node_id:
        type: string
        example: 5b2b7a8edf6e5e00015a815d
      host_name:
        type: string
        example: example.com
      ip_address:
        type: string
        example: 192.168.1.2
      pcr0:
        type: string
        example: ()
      driver:
        type: string
        example: OAM
      distribution:
        type: string
        example: xenial
      analysis_type:
        type: string
        example: FULL
      status:
        type: string
        example: isolated, connected, terminated
      configuration:
        type: string
        example: inet addr:127.0.0.1  Mask:255.0.0.0
      timestamp:
        type: string
        example: Thu, 21 Jun 2018 10:19:01 GMT
      physical:
        type: boolean
        example: true

  GetNodeOutput:
    type: object
    required:
      - node_id
      - host_name
      - ip_address
      - pcr0
      - driver
      - distribution
      - analysis_type
      - status
    properties:
      node_id:
        type: string
        example: 5b2b7a8edf6e5e00015a815d
      host_name:
        type: string
        example: example.com
      ip_address:
        type: string
        example: 192.168.1.2
      pcr0:
        type: string
        example: ()
      driver:
        type: string
        example: OAM
      distribution:
        type: string
        example: xenial
      analysis_type:
        type: string
        example: FULL
      status:
        type: string
        example: isolated, connected, terminated
      configuration:
        type: string
        example: inet addr:127.0.0.1  Mask:255.0.0.0
      timestamp:
        type: string
        example: Thu, 21 Jun 2018 10:19:01 GMT
      physical:
        type: boolean
        example: true

  InstantiateNSOutput:
    type: object
    properties:
      ns_name:
        type: string
      instance_name:
        type: string
      instance_id:
        type: string
      vim_id:
        type: string
      result:
        type: string
      analysis_type:
        type: string
      distribution:
        type: string
      pcr0:
        type: string
      driver:
        type: string

  PackageOnboardedInput:
    type: object
    required:
      - path
    properties:
      path:
        type: string
        example: /opt/osm_pkg/cirros_vnf.tar.gz

  RegisterNodeOutput:
    type: object
    required:
      - node_id
    properties:
      node_id:
        type: string
        example: 48c50c21f6fa26100644

  IsolateNodeInput:
    type: object
    required:
      - isolated
    properties:
      isolated:
        type: boolean
        example: true

  DisableNodeInput:
    type: object
    required:
      - disabled
    properties:
      isolated:
        type: boolean
        example: true

  TerminateNodeInput:
    type: object
    required:
      - isolated
    properties:
      isolated:
        type: boolean
        example: true

  RegisterNodeInput:
    type: object
    required:
      - host_name
      - ip_address
      - pcr0
      - driver
      - analysis_type
      - distribution
      - authentication
      - isolation_policy
      - termination_policy
    properties:
      host_name:
        type: string
        example: node.test
      ip_address:
        type: string
        example: 192.168.10.2
      pcr0:
        type: string
        example: example
      physical:
        type: boolean
        example: true
      driver:
        type: string
        example: OAT
      analysis_type:
        type: string
        example: FULL
      distribution:
        type: string
        example: xenial
      authentication:
        type: object
        required:
          - username
          - type
        properties:
          username:
            type: string
            example: user
          type:
            type: string
            example: password, private_key
          password:
            type: string
            example: password
          private_key:
            type: string
            example: -----BEGIN RSA PRIVATE KEY-----\nMIIEqAIBAAKCAQEAnaSdeeE/bcAxgsivLliDhRE017ZK74m2QYg58QNbfdzoNba2 ...
      isolation_policy:
        type: object
        required:
          - name
          - type
        properties:
          name:
            type: string
            example: DownEth0
          type:
            type: string
            example: ifdown, delflow, shutdown
          interface_name:
            type: string
            example: eth0
          command:
            type: string
            example: sudo poweroff
          flow_id:
            type: string
            example: 21
          rule:
            type: string
            example: rule1
      termination_policy:
        type: object
        required:
          - name
          - type
        properties:
          name:
            type: string
            example: DownEth0
          type:
            type: string
            example: ifdown, delflow, shutdown
          interface_name:
            type: string
            example: eth0
          command:
            type: string
            example: sudo poweroff
          flow_id:
            type: string
            example: 21
          rule:
            type: string
            example: rule1

  PackageOnboardedOutput:
    type: object
    required:
      - package
      - transaction_id
    properties:
      package:
        type: string
        example: /opt/osm_pkg/cirros_vnf.tar.gz
      transaction_id:
        type: string
        example: fe54b446-0e8e-4041-9d00-c07387aa1804

  PackageRemovedOutput:
    type: object
    required:
      - package
    properties:
      package:
        type: string
        example: cirros_vnfd

  RunningVnsfOutput:
    type: object
    required:
      - vnsf
    properties:
      vnsf:
        type: array
        items:
          type: object
          properties:
            config_status:
              type: string
              example: configuring
            ip:
              type: string
              example: 172.16.13.126
            ns_id:
              type: string
              example: 84e9676d-a237-4908-86e9-60eb976dae3c
            ns_name:
              type: string
              example: mspl
            operational_status:
              type: string
              example: running
            vendor:
              type: string
              example: SHIELD
            vim:
              type: string
              example: openstack-vim1
            vnfr_id:
              type: string
              example: ed37f789-9ed8-43bc-8b5f-c4c1ca192363
            vnfd_id:
              type: string
              example: mspl_vnf
            vnfr_name:
              type: string
              example: mspl__mspl_vnf__2

  RunningNsOutput:
    type: object
    required:
      - ns
    properties:
      ns:
        type: array
        items:
          type: object
          properties:
            nsd_id:
              type: string
              example: mspl_vnf
            config_status:
              type: string
              example: configured
            instance_id:
              type: string
              example: d75efa2d-b4d4-42a3-9bcb-20324f7d8e47
            instance_name:
              type: string
              example: fl7filter_nsd
            ns_name:
              type: string
              example: fl7filter_nsd
            operational_status:
              type: string
              example: running
            vlrs:
              type: array
              items:
                type: object
                properties:
                  vim_id:
                    type: string
                    example: f9acd550-9d48-11e7-ae4c-00163e3afbe5
                  vlr_id:
                    type: string
                    example: 8cb0c418-830f-4bf6-acdc-fbccdc0b1818
            constituent_vnf_instances:
              type: array
              items:
                type: object
                properties:
                  config_jobs:
                    type: array
                    items:
                      type: object
                      properties:
                        created_time:
                          type: integer
                          example: 1523980730
                        job_id:
                          type: integer
                          example: 1
                        job_status:
                          type: string
                          example: success
                        triggered_by:
                          type: string
                          example: vnf-primitive
                        primitives:
                          type: array
                          items:
                            type: object
                            properties:
                              execution_id:
                                type: string
                                example: action-62e63d58-c95a-40a8-81e3-ff68232dc4b6
                              execution_status:
                                type: string
                                example: success
                              name:
                                type: string
                                example: set-policies
                  config_status:
                    type: string
                    example: configuring
                  ip:
                    type: string
                    example: 10.101.20.52
                  ns_id:
                    type: string
                    example: d75efa2d-b4d4-42a3-9bcb-20324f7d8e47
                  ns_name:
                    type: string
                    example: fl7f_test25
                  operational_status:
                    type: string
                    example: running
                  vendor:
                    type: string
                    example: POLITO
                  vim:
                    type: string
                    example: openstack-orion
                  vnf_id:
                    type: string
                    example: 6c358c6b-2807-4988-826e-6c601e674e0d
                  vnf_name:
                    type: string
                    example: fl7f_test25__fl7filter_vnfd__1

  DeleteNsOutput:
    type: object
    properties:
      action:
        type: string
        example: delete
      instance_id:
        type: string
        example: ff8a4f36-3c5d-4580-b3ea-6d30e4063ab9
      result:
        type: string
        example: success

  VimListOutput:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
          example: openstack-vim1
        uuid:
          type: string
          example: a9442c66-9df8-01ca-a34c-9b363e37fb4e

  VimListImageOutput:
    type: object
    required:
      - tenant
    properties:
      tenant:
        type: object
        required:
          - datacenter
        properties:
          datacenter:
            type: array
            items:
              type: object
              required:
              - status
              - created_at
              - name
              - tags
              - container_format
              - min_ram
              - disk_format
              - updated_at
              - visibility
              - owner
              - schema
              - protected
              - file
              - checksum
              - min_disk
              - virtual_size
              - id
              - size
              properties:
                status:
                  type: string
                  example: active
                created_at:
                  type: string
                  example: "2017-01-01T00:00:01Z"
                name:
                  type: string
                  example: cirros
                tags:
                  type: string
                  example: []
                container_format:
                  type: string
                  example: bare
                min_ram:
                  type: integer
                  example: 0
                disk_format:
                  type: string
                  example: qcow2
                updated_at:
                  type: string
                  example: "2017-05-29T11:26:44Z"
                visibility:
                  type: string
                  example: public
                owner:
                  type: string
                  example: 40e29a687c564179a96b10c744f01dbf
                schema:
                  type: string
                  example: /v2/schemas/image
                protected:
                  type: boolean
                  example: false
                file:
                  type: string
                  example: /v2/images/4acfc0ea-80f1-4731-9314-7c0e7557f911/file
                checksum:
                  type: string
                  example: f8ab98ff5e73ebab884d80c9dc9c7290
                min_disk:
                  type: integer
                  example: 0
                virtual_size:
                  type: string
                  example: null
                id:
                  type: string
                  example: 4acfc0ea-80f1-4731-9314-7c0e7557f911
                size:
                  type: integer
                  example: 13267968
                base_image_ref:
                  type: string
                  example: 1f8af108-895c-49c7-b9ee-585d11f7737b
                boot_roles:
                  type: string
                  example: heat_stack_owner,admin
                image_location:
                  type: string
                  example: snapshot
                image_state:
                  type: string
                  example: available
                image_type:
                  type: string
                  example: snapshot
                instance_uuid:
                  type: string
                  example: 6a552265-d279-438c-8dfd-18d0a4886977
                kernel_id:
                  type: string
                  example: db411b71-b04a-4d3f-b138-67eec62d935e
                owner_id:
                  type: string
                  example: 5cc21dbee0cc4078a3b912817fa31294
                ramdisk_id:
                  type: string
                  example: 8282a5df-2d9e-4e0f-b4f1-7553caba8089
                user_id:
                  type: string
                  example: 37f7f0d35abe4348873d4c78fd2a1a42

  VimRegisterImageOutput:
    type: object
    required:
      - image
      - status
    properties:
      image:
        type: object
        required:
        - checksum
        - container_format
        - disk_format
        - name
        - uuid
        properties:
          checksum:
            type: string
            example: a6ffaa77f949a9e4ebb082c6147187cf
          container_format:
            type: string
            example: bare
          disk_format:
            type: string
            example: qcow2
          name:
            type: string
            example: Fedora-x86_64-20-20131211.1-sda-ping.qcow2
          uuid:
            type: string
            example: 20996986-0ee2-4eda-ad72-918997ba00b3
      status:
        type: string
        example: registered

  VnsfActionInput:
    type: object
    required:
      - vnsf_id
      - action
      - params
    properties:
      vnsf_id:
        type: string
        example: afcb3492-f326-4979-acea-fcc47168ca12
      action:
        type: string
        example: set-policies
      params:
        type: object
        example: {"key": "value"}

  VnsfActionOutput:
    type: object
    required:
      - output
    properties:
      output:
        type: object
        properties:
          create-time:
            type: string
            example: 1505647110
          job-id:
            type: string
            example: 1
          name:
            type: string
          nsr_id_ref:
            type: string
            example: e3c04a54-2a4b-4bd7-84d0-f0c024857380
          triggered-by:
            type: string
            example: ns-primitive
          vnf-out-list:
            type: object
            required:
              - member_vnf_index_ref
              - vnf-out-primitive
            properties:
              member_vnf_index_ref:
                type: string
                example: 1
              vnf-out-primitive:
                type: object
                required:
                  - execution-error-details
                  - execution-id
                  - execution-status
                  - index
                  - name
                  - parameter
                  - vnfr-id-ref
                properties:
                  execution-error-details:
                    type: string
                    example: ""
                  execution-id:
                    type: string
                    example: action-2ac6e694-b347-411a-839d-fca863b2ea1a
                  execution-status:
                    type: string
                    example: pending
                  index:
                    type: string
                    example: 0
                  name:
                    type: string
                    example: set-policies
                  parameter:
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        type: string
                        example: policies
                      value:
                        type: string
                        example: "<xml>data</xml>"
                  vnfr-id-ref:
                    type: string
                    example: afcb3492-f326-4979-acea-fcc47168ca12

externalDocs:
  description: Find out more about the vNSFO API
  url: https://github.com/shield-h2020/nfvo
